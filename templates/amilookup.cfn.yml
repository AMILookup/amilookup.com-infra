AWSTemplateFormatVersion: "2010-09-09"
Description: AMI Lookup CloudFormation templates
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  env:
    Type: String
    Description: Environment Name
    Default: dev
  ArtifactsBucket:
    Type: String
    Description: Artifacts s3 bucket
    Default: dev-amilookup-artifacts
  TemplateBucketS3URL:
    Type: String
    Description: s3 URL
    Default: s3.us-east-1.amazonaws.com
  TemplateBucketName:
    Type: String
    Description: S3 Bucket Hosting Templates
    Default: dev-amilookup-artifacts
  TemplateBucketPrefix:
    Type: String
    Description: S3 Templates Bucket Prefix
    Default: functions

Globals:
  Function:
    Runtime: python3.7
  Api:
    EndpointConfiguration: REGIONAL
    Cors: "'dev.amilookup.com'"

Resources:
  amilookupGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref env
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
          title: "test-stack-name"
        host: "oej4dvbi7e.execute-api.us-east-1.amazonaws.com"
        basePath: "/Prod"
        schemes:
        - "https"
        paths:
          /ami:
            post:
              produces:
              - "application/json"
              responses:
                '200':
                  description: "200 response"
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${amilookupFunction}/invocations"
                responses:
                  default:
                    statusCode: "200"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                contentHandling: "CONVERT_TO_TEXT"
                type: "aws"
            options:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              responses:
                '200':
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
                      method.response.header.Access-Control-Allow-Origin: "'dev.amilookup.com'"
                    responseTemplates:
                      application/json: "{}\n"
                passthroughBehavior: "when_no_match"
                requestTemplates:
                  application/json: "{\n  \"statusCode\" : 200\n}\n"
                type: "mock"

  amilookupFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: ami_lookup.lambda_handler
      CodeUri:
        Bucket: !Ref TemplateBucketName
        Key: !Sub ${TemplateBucketPrefix}/ami_lookup.zip
      Policies:
        - Statement:
          - Sid: AssumeRole
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: "*"
          - Sid: CheckInstances
            Effect: Allow
            Action:
              - ec2:DescribeRegions
              - ec2:DescribeInstances
            Resource: "*"
      Events:
        amilookupApi:
            Type: Api
            Properties:
                Path: /ami
                Method: POST
  dbreadFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: db_read.lambda_handler
      CodeUri:
        Bucket: !Ref TemplateBucketName
        Key: !Sub ${TemplateBucketPrefix}/db_read.zip
